apiVersion: fn.kpt.dev/v1alpha1
kind: StarlarkRun
metadata:
  name: set-values
  annotations:
    config.kubernetes.io/local-config: "true"
source: |-
  load("krmfn.star", "krmfn")
  def set_values(resources):
    # this package can be cloned manually and used without injection; in that case base
    # the repository name on the package name
    for r in resources:
      if krmfn.match_gvk(r, "v1", "ConfigMap") and krmfn.match_name(r, "kptfile.kpt.dev"):
        clusterName = r["data"]["name"]
    for r in resources:
      if krmfn.match_gvk(r, "cluster.x-k8s.io/v1beta1", "Cluster"):
        r["metadata"]["name"] = new_cluster_name
        r["spec"]["controlPlaneRef"]["name"] = new_cluster_name + "-control-plane"
        r["spec"]["infrastructureRef"]["name"] = new_cluster_name
      if krmfn.match_gvk(r, "infrastructure.cluster.x-k8s.io/v1beta2", "AWSCluster"):
        r["metadata"]["name"] = new_cluster_name
      if krmfn.match_gvk(r, "controlplane.cluster.x-k8s.io/v1beta1", "KubeadmControlPlane"):
        r["metadata"]["name"] = new_cluster_name + "-control-plane"
        r["spec"]["machineTemplate"]["infrastructureRef"]["name"] = new_cluster_name + "-control-plane"
      if krmfn.match_gvk(r, "infrastructure.cluster.x-k8s.io/v1beta2", "AWSMachineTemplate"):
        if r["metadata"]["name"].endswith("-control-plane"):
          r["metadata"]["name"] = new_cluster_name + "-control-plane"
        elif r["metadata"]["name"].endswith("-md-0"):
          r["metadata"]["name"] = new_cluster_name + "-md-0"
      if krmfn.match_gvk(r, "bootstrap.cluster.x-k8s.io/v1beta1", "KubeadmConfigTemplate"):
        if r["metadata"]["name"].endswith("-md-0"):
          r["metadata"]["name"] = new_cluster_name + "-md-0"
      if krmfn.match_gvk(r, "cluster.x-k8s.io/v1beta1", "MachineDeployment"):
        if r["metadata"]["name"].endswith("-md-0"):
          r["metadata"]["name"] = new_cluster_name + "-md-0"
          r["spec"]["clusterName"] = new_cluster_name
          r["spec"]["template"]["spec"]["clusterName"] = new_cluster_name
          r["spec"]["template"]["spec"]["bootstrap"]["configRef"]["name"] = new_cluster_name + "-md-0"
          r["spec"]["template"]["spec"]["infrastructureRef"]["name"] = new_cluster_name + "-md-0"
  set_values(ctx.resource_list["items"])