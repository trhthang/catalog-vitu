apiVersion: fn.kpt.dev/v1alpha1
kind: StarlarkRun
metadata:
  name: set-values
  annotations:
    config.kubernetes.io/local-config: "true"
source: |-
  load("krmfn.star", "krmfn")

  def set_values(resources):
    for r in resources:
      if krmfn.match_gvk(r, "v1", "ConfigMap") and krmfn.match_name(r, "kptfile.kpt.dev"):
        new_cluster_name = r["metadata"]["annotations"]["nephio.org/cluster-name"]

    # Apply the new cluster name to the Cluster, AWSCluster, KubeadmControlPlane, and AWSMachineTemplate resources
    for r in resources:
      if krmfn.match_gvk(r, "cluster.x-k8s.io/v1beta1", "Cluster"):
        r["metadata"]["name"] = new_cluster_name
        r["spec"]["controlPlaneRef"]["name"] = new_cluster_name + "-control-plane"
        r["spec"]["infrastructureRef"]["name"] = new_cluster_name
      if krmfn.match_gvk(r, "infrastructure.cluster.x-k8s.io/v1beta2", "AWSCluster"):
        r["metadata"]["name"] = new_cluster_name
      if krmfn.match_gvk(r, "controlplane.cluster.x-k8s.io/v1beta1", "KubeadmControlPlane"):
        r["metadata"]["name"] = new_cluster_name + "-control-plane"
        r["spec"]["machineTemplate"]["infrastructureRef"]["name"] = new_cluster_name + "-control-plane"
      if krmfn.match_gvk(r, "infrastructure.cluster.x-k8s.io/v1beta2", "AWSMachineTemplate"):
        if r["metadata"]["name"].endswith("-control-plane"):
          r["metadata"]["name"] = new_cluster_name + "-control-plane"
        elif r["metadata"]["name"].endswith("-md-0"):
          r["metadata"]["name"] = new_cluster_name + "-md-0"
      if krmfn.match_gvk(r, "bootstrap.cluster.x-k8s.io/v1beta1", "KubeadmConfigTemplate"):
        if r["metadata"]["name"].endswith("-md-0"):
          r["metadata"]["name"] = new_cluster_name + "-md-0"
      if krmfn.match_gvk(r, "cluster.x-k8s.io/v1beta1", "MachineDeployment"):
        if r["metadata"]["name"].endswith("-md-0"):
          r["metadata"]["name"] = new_cluster_name + "-md-0"
          r["spec"]["clusterName"] = new_cluster_name
          r["spec"]["template"]["spec"]["clusterName"] = new_cluster_name
          r["spec"]["template"]["spec"]["bootstrap"]["configRef"]["name"] = new_cluster_name + "-md-0"
          r["spec"]["template"]["spec"]["infrastructureRef"]["name"] = new_cluster_name + "-md-0"
      if krmfn.match_gvk(r, "v1", "ConfigMap"):
        if r["metadata"]["name"] == "aws-ebs-csi-driver-addon":
          r["metadata"]["name"] = new_cluster_name + "-aws-ebs-csi-driver-addon"
        elif r["metadata"]["name"] == "cloud-controller-manager-addon":
          r["metadata"]["name"] = new_cluster_name + "-cloud-controller-manager-addon"
      if krmfn.match_gvk(r, "addons.cluster.x-k8s.io/v1beta1", "ClusterResourceSet"):
        if r["metadata"]["name"] == "crs-ccm":
          r["metadata"]["name"] = new_cluster_name + "-crs-ccm"
          # Update associated resources
          for resource in r["spec"]["resources"]:
            if resource["kind"] == "ConfigMap" and resource["name"] == "cloud-controller-manager-addon":
              resource["name"] = new_cluster_name + "-cloud-controller-manager-addon"
        elif r["metadata"]["name"] == "crs-csi":
          r["metadata"]["name"] = new_cluster_name + "-crs-csi"
          # Update associated resources
          for resource in r["spec"]["resources"]:
            if resource["kind"] == "ConfigMap" and resource["name"] == "aws-ebs-csi-driver-addon":
              resource["name"] = new_cluster_name + "-aws-ebs-csi-driver-addon"

  set_values(ctx.resource_list["items"])
