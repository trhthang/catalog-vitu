apiVersion: fn.kpt.dev/v1alpha1
kind: StarlarkRun
metadata:
  name: set-values
  annotations:
    config.kubernetes.io/local-config: "true"
source: |-
  load("krmfn.star", "krmfn")
  def set_values(resources):
    # Initialize a variable to hold the new cluster name
    new_cluster_name = ""
    # Find the WorkloadCluster and extract the cluster name
    for r in resources:
      if krmfn.match_gvk(r, "infra.nephio.org/v1alpha1", "WorkloadCluster"):
        new_cluster_name = r["spec"]["clusterName"]
        break  # Stop the loop once the cluster name is found

    # Apply the new cluster name to the Cluster, AWSCluster, KubeadmControlPlane, and AWSMachineTemplate resources
    for r in resources:
      if krmfn.match_gvk(r, "v1", "ConfigMap"):
        if r["metadata"]["name"] == "aws-ebs-csi-driver-addon":
          r["metadata"]["name"] = new_cluster_name + "-aws-ebs-csi-driver-addon"
        elif r["metadata"]["name"] == "cloud-controller-manager-addon":
          r["metadata"]["name"] = new_cluster_name + "-cloud-controller-manager-addon"
      if krmfn.match_gvk(r, "addons.cluster.x-k8s.io/v1beta1", "ClusterResourceSet"):
        if r["metadata"]["name"] == "crs-ccm":
          r["metadata"]["name"] = new_cluster_name + "-crs-ccm"
          # Update associated resources
          for resource in r["spec"]["resources"]:
            if resource["kind"] == "ConfigMap" and resource["name"] == "cloud-controller-manager-addon":
              resource["name"] = new_cluster_name + "-cloud-controller-manager-addon"
        elif r["metadata"]["name"] == "crs-csi":
          r["metadata"]["name"] = new_cluster_name + "-crs-csi"
          # Update associated resources
          for resource in r["spec"]["resources"]:
            if resource["kind"] == "ConfigMap" and resource["name"] == "aws-ebs-csi-driver-addon":
              resource["name"] = new_cluster_name + "-aws-ebs-csi-driver-addon"

  set_values(ctx.resource_list["items"])
